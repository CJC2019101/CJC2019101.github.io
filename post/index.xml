<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 阿飞</title>
    <link>https://CJC2019101.github.io/post/</link>
    <description>Recent content in Posts on 阿飞</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 12 Apr 2020 22:23:43 +0800</lastBuildDate>
    
	<atom:link href="https://CJC2019101.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BigInterger和BigDecimal</title>
      <link>https://CJC2019101.github.io/post/BigInterger%E5%92%8CBigDecimal/</link>
      <pubDate>Sun, 12 Apr 2020 22:23:43 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/BigInterger%E5%92%8CBigDecimal/</guid>
      <description>BigInterger 一、简介： BigInteger，大整型数。按字面意思理解就好这是一个超大的整数。 这是Java提供的用于存放超过“long”型的整数。 使用场景：当我们需要记录一个2000位的整数计算时咋办？使用字符串获取2000位的整数，再分割成Integer、Long大小范围内能接受的若干个小</description>
    </item>
    
    <item>
      <title>Java异常</title>
      <link>https://CJC2019101.github.io/post/Java%E5%BC%82%E5%B8%B8/</link>
      <pubDate>Tue, 17 Mar 2020 21:03:31 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/Java%E5%BC%82%E5%B8%B8/</guid>
      <description>Java的异常体系 Throwable是所有Java异常的父类，只能 throw、throws Throwable的子类，及其自己。 分类： 1. “checkedException”异常： 受检异常，要么在“方法签名上”抛出异常，要么在方法内部“捕获-处理”异常。 可预料异常，知道可能要发生。。</description>
    </item>
    
    <item>
      <title>Java的IO</title>
      <link>https://CJC2019101.github.io/post/Java%E7%9A%84IO/</link>
      <pubDate>Mon, 09 Mar 2020 07:53:39 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/Java%E7%9A%84IO/</guid>
      <description>一、计算机组成原理常识： 推荐文章《CPU：这个世界慢！死！了！》，观后感编写代码要尽量减少程序的IO操作。 CPU： 计算机进行运算的地方，也可以说电脑执行指令的地方。 运算速度是最快的，快到什么程度你看了《CPU：这个世界慢死了！》就知道快的是多夸张了。 当然价格也是最贵的这也是电脑为</description>
    </item>
    
    <item>
      <title>Web小知识</title>
      <link>https://CJC2019101.github.io/post/web%E5%B0%8F%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 08 Mar 2020 20:41:25 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/web%E5%B0%8F%E7%9F%A5%E8%AF%86/</guid>
      <description>Http Erro Code分类 2XX：表示状态成功。 4XX：客户端错误。 5XX：服务器端错误。 简单的识别爬虫 User-Agent：用户代理，其实我们的浏览器就是一个用户代理，当我使用浏览器发送请求时，我们的请求头里都会有 User-Agent （用户代理）这个提示信息。我们可以通过这个可以简单的识别&amp;quot;Ht</description>
    </item>
    
    <item>
      <title>Cmder的安装与配置</title>
      <link>https://CJC2019101.github.io/post/Cmder%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sun, 01 Mar 2020 21:35:56 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/Cmder%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</guid>
      <description>一、Cmder简介 1. Cmder简单来说就是一个比Windows 命令行（cmd.exe）更方便有效的命令行工具。 2. 与cmd相比的优势： i. 支持很多的快捷键，可以一键打开命令行。 ii. 支持分屏操作，就是一个屏幕被多个Cmder命令行界面划分。 iii. 自带git功能，也就是说安卓Cmder之后就不</description>
    </item>
    
    <item>
      <title>Collection体系的使用</title>
      <link>https://CJC2019101.github.io/post/Collection%E4%BD%93%E7%B3%BB/</link>
      <pubDate>Sun, 16 Feb 2020 10:41:39 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/Collection%E4%BD%93%E7%B3%BB/</guid>
      <description>Collection Collection是Java所有集合类的父类。 常见的有：List、Set、Map、Tree。 常用方法： retailAll(Collectiont); 取两个集合的交集。 contains(T t); 是否包含某个值。 对应的工具类：Collections 常用方法： 1. csort(Collectiont); 对实现了Comparable接口的集合元素排序，默认是升序。 2. reverse(Collectiont); 对集合逆序排列。如：</description>
    </item>
    
    <item>
      <title>Maven</title>
      <link>https://CJC2019101.github.io/post/Maven/</link>
      <pubDate>Wed, 05 Feb 2020 22:01:56 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/Maven/</guid>
      <description>Maven存在的原因 以前编写项目需要导入其他人编写的jar包时都是自己手动一个一个的拖到一个文件夹下。而Maven的pom.xml文件就很好的解决了这个问题。 jar包实质就是一个“.zip”类型的压缩文件，我们可以将其修改为.zip文件解压。打开解压后的文件夹我们可以发现jar文</description>
    </item>
    
    <item>
      <title>使用postman进行登录测试</title>
      <link>https://CJC2019101.github.io/post/%E4%BD%BF%E7%94%A8postman%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Mon, 03 Feb 2020 09:31:26 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/%E4%BD%BF%E7%94%A8postman%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95%E6%B5%8B%E8%AF%95/</guid>
      <description>访问登录URL获取jwt 1、 添加环境变量jwt，为了可以访问需要登录的URL我们需要在请求头中存放有效的jwt。 2、 添加如下代码 ：如果成功获取jwt会在控制台打印 “Your test name” pm.test(&amp;quot;Your test name&amp;quot;, function(){ var jsonData = pm.response.json(); console.log(jsonData.jwt) pm.environment.set(&amp;quot;jwt&amp;quot;,jsonData.jwt); }); 3、 获取登录URL，访问登录成功获取jwt。 4、 获取需要登陆才能访问的UR</description>
    </item>
    
    <item>
      <title>20200202</title>
      <link>https://CJC2019101.github.io/post/20200202/</link>
      <pubDate>Sun, 02 Feb 2020 23:41:07 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/20200202/</guid>
      <description>2020年02月02日多多少少有些特殊，作为一名程序猿我不希望自己成为手机里的只会敲代码的机器人。所以写一篇博客记录一下这个特别、美好的一天。 今天工作体会 程序猿的我很悲催，现在疫情当前很多亲戚朋友都在家躲避“新型冠状病毒”。而我接到通知在家办公&amp;hellip;&amp;hellip;.。</description>
    </item>
    
    <item>
      <title>Github常用命令</title>
      <link>https://CJC2019101.github.io/post/github%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Mon, 20 Jan 2020 17:27:26 +0800</pubDate>
      
      <guid>https://CJC2019101.github.io/post/github%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>使用github的好处 提高工作效率，github作为一个远程版本控制仓库可以简化工作。 如：领导意见不统一，有时程序员需要做两个功能不同的程序出来。通常情况下我只能复制两个文件分开开发，如果每个程序的功能过多很容易出错。而我们使用github 的“git branch name” 可以非常简便的解决</description>
    </item>
    
  </channel>
</rss>